import Anthropic from '@anthropic-ai/sdk';
import dotenv from 'dotenv';
import config from './config.js';
import { createLogger, format, transports } from 'winston';

dotenv.config({ override: true });

const anthropic = new Anthropic({ apiKey: process.env.CLAUDE_KEY });
const model = config.claudeConfig.model;

const logger = createLogger({
    level: config.logging.level,
    format: format.combine(format.timestamp(), format[config.logging.format]()),
    transports: [
        new transports.Console(),
        new transports.File({ filename: 'error.log', level: 'error' }),
        new transports.File({ filename: config.logging.filename })
    ]
});

const generateContent = async (prompt, options = {}) => {
    const messages = [
        {
            role: 'user',
            content: [{ type: 'text', text: prompt }]
        }
    ];

    const defaultOptions = {
        maxTokens: config.contentGeneration.maxLength,
        temperature: config.claudeConfig.temperature
    };

    const mergedOptions = { ...defaultOptions, ...options };

    try {
        const response = await anthropic.messages.create({
            model,
            max_tokens: mergedOptions.maxTokens,
            temperature: mergedOptions.temperature,
            messages
        });

        return response?.content?.[0]?.text;
    } catch (error) {
        logger.error('Error generating content with Claude:', error);
        throw error;
    }
};

export const generateRedditPost = async (subreddit) => {
    const prompt = `Create a Reddit post for r/${subreddit} promoting ${config.product.name}. The post should be engaging, relevant to the subreddit, and highlight ${config.product.name}'s advantages compared to other AI coding tools. Include a title and body text. Product description: ${config.product.description}`;
    return generateContent(prompt, { maxTokens: 300 });
};

export const generateRedditComment = async (postTitle, toolMentioned) => {
    const prompt = `Create a Reddit comment for a post titled "${postTitle}" that mentions ${toolMentioned}. The comment should promote ${config.product.name} as an alternative, highlighting its advantages. Keep it concise and relevant to the original post. Product description: ${config.product.description}`;
    return generateContent(prompt, { maxTokens: 150 });
};

export const analyzePostPerformance = async (postData) => {
    const prompt = `Analyze the performance of this Reddit post:
  Title: ${postData.title}
  Upvotes: ${postData.upvotes}
  Comments: ${postData.commentCount}
  Subreddit: ${postData.subreddit}

  Provide a brief analysis of the post's performance and suggestions for improvement.`;
    return generateContent(prompt, { maxTokens: 200 });
};

export const generatePersonalizedContent = async (subreddit, keywords) => {
    const prompt = `Create personalized content for r/${subreddit} promoting ${
        config.product.name
    }. Incorporate these keywords: ${keywords.join(
        ', '
    )}. Ensure the content adheres to the subreddit's rules and preferences. Product description: ${
        config.product.description
    }`;
    return generateContent(prompt, { maxTokens: 250 });
};

export const handleUserInteraction = async (userComment) => {
    const prompt = `Respond to this user comment about ${config.product.name}: "${userComment}". Provide a helpful and engaging response that addresses the user's points and further promotes ${config.product.name}. Product description: ${config.product.description}`;
    return generateContent(prompt, { maxTokens: 200 });
};

export const optimizeContentForKeywords = async (content, keywords) => {
    const prompt = `Optimize the following content for these keywords: ${keywords.join(
        ', '
    )}. Maintain the original meaning and tone while naturally incorporating the keywords:

${content}`;
    return generateContent(prompt, { maxTokens: content.length + 100 });
};

export const generateMultilingualContent = async (content, targetLanguage) => {
    const prompt = `Translate and adapt the following content to ${targetLanguage}, ensuring it remains culturally appropriate and effective:

${content}`;
    return generateContent(prompt, { maxTokens: content.length * 1.5 });
};

export const generateContentSummary = async (content) => {
    const prompt = `Summarize the key points of the following content in a concise manner:

${content}`;
    return generateContent(prompt, { maxTokens: Math.min(content.length / 2, 150) });
};

export const scoreContent = async (content) => {
    const prompt = `Rate the following content on a scale of 0 to 1, considering factors such as engagement, relevance, and persuasiveness:

${content}

Provide a single number as the score.`;
    const score = await generateContent(prompt, { maxTokens: 10 });
    return parseFloat(score);
};

export const generateAIDisclaimer = async () => {
    const prompt = `Create a brief, transparent disclaimer stating that the content is AI-generated by ${config.product.name}, an AI coding assistant.`;
    return generateContent(prompt, { maxTokens: 50 });
};

export const generateHashtags = async (content) => {
    const prompt = `Generate 3-5 relevant hashtags for the following content:

${content}`;
    return generateContent(prompt, { maxTokens: 50 });
};

export const generateCallToAction = async (platform) => {
    const prompt = `Create a compelling call-to-action for ${config.product.name}, tailored for ${platform}. Encourage users to try ${config.product.name} for their coding needs. Product description: ${config.product.description}`;
    return generateContent(prompt, { maxTokens: 50 });
};

export const generateIndustryNews = async () => {
    const prompt = `Generate a brief summary of recent developments in AI coding tools and technologies. Focus on trends relevant to ${config.product.name}'s capabilities. Product description: ${config.product.description}`;
    return generateContent(prompt, { maxTokens: 200 });
};

export const generateCodeSnippet = async (language, task) => {
    const prompt = `Create a short code snippet in ${language} that demonstrates how ${config.product.name} can assist with ${task}. Include a brief explanation of the code. Product description: ${config.product.description}`;
    return generateContent(prompt, { maxTokens: 250 });
};

export const generateComparison = async (competitor) => {
    const prompt = `Create a brief, factual comparison between ${config.product.name} and ${competitor}. Highlight ${config.product.name}'s unique features and advantages without disparaging the competitor. Product description: ${config.product.description}`;
    return generateContent(prompt, { maxTokens: 200 });
};

export const generateFAQ = async () => {
    const prompt = `Generate 3-5 frequently asked questions and their answers about ${config.product.name}. Focus on questions that potential users might have when considering ${config.product.name} for their coding needs. Product description: ${config.product.description}`;
    return generateContent(prompt, { maxTokens: 300 });
};

export const generateTestimonial = async () => {
    const prompt = `Create a realistic testimonial from a hypothetical ${config.product.name} user. Highlight specific benefits and improvements they experienced in their coding workflow. Product description: ${config.product.description}`;
    return generateContent(prompt, { maxTokens: 150 });
};
